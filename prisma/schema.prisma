generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model item {
  ItemID          Int               @id @default(autoincrement())
  ItemTitle       String            @db.VarChar(255)
  ItemAuthor      String?           @db.VarChar(255)
  ItemType        String?           @db.VarChar(100)
  ItemPrice       Decimal?          @db.Decimal(10, 2)
  ItemImage       String?           @db.VarChar(255)
  itemtransaction itemtransaction[]
}

model itemtransaction {
  ItemTranID     Int      @id @default(autoincrement())
  ItemID         Int
  IsAvailable    Boolean? @default(true)
  ItemAssignedTo Int?
  IsVisible      Boolean? @default(true)
  patron         patron?  @relation(fields: [ItemAssignedTo], references: [PatronID])
  item           item     @relation(fields: [ItemID], references: [ItemID], onDelete: Cascade)

  @@index([ItemID], map: "FK_ItemTransaction_Item")
  @@index([ItemAssignedTo], map: "FK_ItemTransaction_Patron")
}

model librarian {
  LibrarianID   Int    @id @default(autoincrement())
  LibrarianName String @db.VarChar(255)
  UserID        Int?
  users         users? @relation(fields: [UserID], references: [UserID])

  @@index([UserID], map: "FK_Librarian_Users")
}

model patron {
  PatronID               Int               @id @default(autoincrement())
  PatronFirstName        String            @db.VarChar(100)
  PatronMiddleName       String?           @db.VarChar(100)
  PatronLastName         String            @db.VarChar(100)
  PatronDepartment       String?           @db.VarChar(100)
  PatronSemester         String?           @db.VarChar(50)
  PatronRollNo           String?           @unique(map: "PatronRollNo") @db.VarChar(50)
  PatronEnrollmentNumber String?           @unique(map: "PatronEnrollmentNumber") @db.VarChar(100)
  PatronImage            String?           @db.VarChar(255)
  UserID                 Int?
  itemtransaction        itemtransaction[]
  users                  users?            @relation(fields: [UserID], references: [UserID])

  @@index([UserID], map: "FK_Patron_Users")
}

enum UserRole {
  ADMIN
  LIBRARIAN
  STUDENT
  PATRON
  // Add other roles as needed
}

model users {
  UserID      Int      @id @default(autoincrement())
  UserName    String   @unique(map: "UserName") @db.VarChar(100)
  UserPass    String   @db.VarChar(255)
  UserEmail   String?  @unique(map: "UserEmail") @db.VarChar(255)
  // Use the UserRole enum for the user's role
  UserRole    UserRole @default(STUDENT) // Set a default role if desired

  librarian   librarian[]
  patron      patron[]
}