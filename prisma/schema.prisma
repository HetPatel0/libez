generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  ADMIN
}

enum BorrowStatus {
  BORROWED
  RETURNED
}

model User {
  id                Int            @id @default(autoincrement())
  fullName          String         @db.VarChar(255)
  email             String         @unique
  password          String
  status            Status         @default(PENDING)
  role              Role           @default(USER)
  lastActivityDate  DateTime       @default(now()) @db.Date
  createdAt         DateTime       @default(now()) @db.Timestamptz(6)

  // Relations
  borrowRecords     BorrowRecord[]
}

model Book {
  id              Int            @id @default(autoincrement())
  title           String         @db.VarChar(255)
  author          String         @db.VarChar(255)
  genre           String
  rating          Int
  coverUrl        String
  description     String
  totalCopies     Int            @default(1)
  createdAt       DateTime       @default(now()) @db.Timestamptz(6)

  // Relations
  borrowRecords   BorrowRecord[]
}

model BorrowRecord {
  id         String       @id @default(uuid())
  userId     Int
  bookId     Int
  borrowDate DateTime     @default(now()) @db.Timestamptz(6)
  dueDate    DateTime     @db.Date
  returnDate DateTime?    @db.Date
  status     BorrowStatus @default(BORROWED)
  createdAt  DateTime     @default(now()) @db.Timestamptz(6)

  // Relations
  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}
